Index: Bar Tab App/app.py
===================================================================
diff --git a/Bar Tab App/app.py b/Bar Tab App/app.py
deleted file mode 100644
--- a/Bar Tab App/app.py	(revision 839e983de073dea1f1735a7e9b4524586aa005a7)
+++ /dev/null	(revision 839e983de073dea1f1735a7e9b4524586aa005a7)
@@ -1,74 +0,0 @@
-from pathlib import Path
-import csv
-from platform import processor
-from symtable import Class
-
-#Class
-
-class BarTab():
-    def __init__(self,table_number):
-        self.table_number = table_number
-        self.drinks = []
-        self.total = 0.0
-        self.tip = 0.0
-        self.grand_total = 0.0
-
-
-# serve the customer
-    def serve_customer(self ):
-        while True:
-            drink = input("Enter your drink (or 'q' to quit): ")
-            if drink.lower() == 'q':
-                break
-            elif drink == '':
-                print("drink cannot be empty")
-                continue
-
-            try:
-                price= int(input("what is the price of the drink? "))
-            except ValueError:
-                print("please enter your drink and a valid price again: ")
-                continue
-
-            self.drinks.append((drink,price))
-
-
-
-# calculate the totals
-    def calculate_totals(self):
-        self.total = sum(price for _, price in self.drinks)
-        self.tip = self.total * 0.20
-        self.grand_total = self.total + self.tip
-
-
-# create csv file path
-    def create_csv(self):
-        if not self.drinks:
-            return
-        path = Path(__file__).parent / f"table{self.table_number}.csv"
-        with path.open("w", newline="") as file:
-            writer = csv.writer(file)
-            writer.writerow(["drink","price"])
-
-            for drink,price in self.drinks:
-                writer.writerow([drink,price])
-            writer.writerow(["Total ", f"{self.total:.2f}"])
-            writer.writerow(["Tip ", f"{self.tip:.2f}"])
-            writer.writerow(["Grand Total ", f"{self.grand_total:.2f}"])
-
-
-
-
-# main func
-def main():
-
-    table_one = BarTab(1)
-    table_one.serve_customer()
-    table_one.calculate_totals()
-    table_one.create_csv()
-    return
-
-
-# entry point of the script
-if __name__ == "__main__":
-    main()
Index: Bar Tab App version 2/table_4_tab.csv
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Bar Tab App version 2/table_4_tab.csv b/Bar Tab App version 2/table_4_tab.csv
new file mode 100644
--- /dev/null	(date 1759558146165)
+++ b/Bar Tab App version 2/table_4_tab.csv	(date 1759558146165)
@@ -0,0 +1,8 @@
+Drink Name,Price
+water,20.0
+milk,5.0
+cofee,4.0
+
+Total,$29.00
+Tip (15%),$4.35
+Grand Total,$33.35
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"865113cd-d090-40d8-8715-6238ab101d7e\" name=\"Changes\" comment=\"\">\n      <change afterPath=\"$PROJECT_DIR$/Bar Tab App/app.py\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Python Script\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 5\n}</component>\n  <component name=\"ProjectId\" id=\"32YKewsJIg8leF3RZ0ZPCOkbYZN\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"ModuleVcsDetector.initialDetectionPerformed\": \"true\",\n    \"Python.Defining classes.executor\": \"Run\",\n    \"Python.Lists & Tuples.executor\": \"Run\",\n    \"Python.class_methods.executor\": \"Run\",\n    \"Python.conditional statements.executor\": \"Run\",\n    \"Python.decorator_funcs.executor\": \"Run\",\n    \"Python.dictionaries.executor\": \"Run\",\n    \"Python.error handling.executor\": \"Run\",\n    \"Python.higher_order_funcs.executor\": \"Run\",\n    \"Python.join & slice lists.executor\": \"Run\",\n    \"Python.lambda_funcs.executor\": \"Run\",\n    \"Python.main.executor\": \"Run\",\n    \"Python.match statments.executor\": \"Run\",\n    \"Python.shopping list.executor\": \"Run\",\n    \"Python.static_methods.executor\": \"Run\",\n    \"Python.variable scope.executor\": \"Run\",\n    \"Python.working_with paths.executor\": \"Run\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"RunOnceActivity.TerminalTabsStorage.copyFrom.TerminalArrangementManager.252\": \"true\",\n    \"RunOnceActivity.git.unshallow\": \"true\",\n    \"git-widget-placeholder\": \"master\",\n    \"node.js.detected.package.eslint\": \"true\",\n    \"node.js.detected.package.tslint\": \"true\",\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\n    \"nodejs_package_manager_path\": \"npm\",\n    \"settings.editor.selected.configurable\": \"com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable\",\n    \"vue.rearranger.settings.migration\": \"true\"\n  }\n}]]></component>\n  <component name=\"RecentsManager\">\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/brushup\" />\n    </key>\n  </component>\n  <component name=\"RunManager\">\n    <configuration default=\"true\" type=\"PythonConfigurationType\" factoryName=\"Python\">\n      <module name=\"ETLIFY\" />\n      <option name=\"ENV_FILES\" value=\"\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n  </component>\n  <component name=\"SharedIndexes\">\n    <attachedChunks>\n      <set>\n        <option value=\"bundled-python-sdk-ce6832f46686-7b97d883f26b-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-252.25557.178\" />\n      </set>\n    </attachedChunks>\n  </component>\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"865113cd-d090-40d8-8715-6238ab101d7e\" name=\"Changes\" comment=\"\" />\n      <created>1757592165121</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1757592165121</updated>\n      <workItem from=\"1757592174891\" duration=\"42126000\" />\n    </task>\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\n    <SUITE FILE_PATH=\"coverage/ETLIFY$higher_order_funcs.coverage\" NAME=\"higher_order_funcs Coverage Results\" MODIFIED=\"1759410962312\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/brushup\" />\n    <SUITE FILE_PATH=\"coverage/ETLIFY$conditional_statements.coverage\" NAME=\"conditional statements Coverage Results\" MODIFIED=\"1758531941074\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\n    <SUITE FILE_PATH=\"coverage/ETLIFY$working_with_paths.coverage\" NAME=\"working_with paths Coverage Results\" MODIFIED=\"1759334119915\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/brushup\" />\n    <SUITE FILE_PATH=\"coverage/ETLIFY$error_handling.coverage\" NAME=\"error handling Coverage Results\" MODIFIED=\"1758726958487\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/brushup\" />\n    <SUITE FILE_PATH=\"coverage/ETLIFY$shopping_list.coverage\" NAME=\"shopping list Coverage Results\" MODIFIED=\"1758893965842\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/brushup\" />\n    <SUITE FILE_PATH=\"coverage/ETLIFY$class_methods.coverage\" NAME=\"class_methods Coverage Results\" MODIFIED=\"1759499626934\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/brushup\" />\n    <SUITE FILE_PATH=\"coverage/ETLIFY$decorator_funcs.coverage\" NAME=\"decorator_funcs Coverage Results\" MODIFIED=\"1759412211039\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/brushup\" />\n    <SUITE FILE_PATH=\"coverage/ETLIFY$join___slice_lists.coverage\" NAME=\"join &amp; slice lists Coverage Results\" MODIFIED=\"1758721563814\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/brushup\" />\n    <SUITE FILE_PATH=\"coverage/ETLIFY$static_methods.coverage\" NAME=\"static_methods Coverage Results\" MODIFIED=\"1759501107581\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/brushup\" />\n    <SUITE FILE_PATH=\"coverage/ETLIFY$Lists___Tuples.coverage\" NAME=\"Lists &amp; Tuples Coverage Results\" MODIFIED=\"1758721020963\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/brushup\" />\n    <SUITE FILE_PATH=\"coverage/ETLIFY$match_statments.coverage\" NAME=\"match statments Coverage Results\" MODIFIED=\"1758724477593\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/brushup\" />\n    <SUITE FILE_PATH=\"coverage/ETLIFY$Defining_classes.coverage\" NAME=\"Defining classes Coverage Results\" MODIFIED=\"1759499081722\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/brushup\" />\n    <SUITE FILE_PATH=\"coverage/ETLIFY$dictionaries.coverage\" NAME=\"dictionaries Coverage Results\" MODIFIED=\"1758722640755\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/brushup\" />\n    <SUITE FILE_PATH=\"coverage/ETLIFY$lambda_funcs.coverage\" NAME=\"lambda_funcs Coverage Results\" MODIFIED=\"1759411436215\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/brushup\" />\n    <SUITE FILE_PATH=\"coverage/ETLIFY$variable_scope.coverage\" NAME=\"variable scope Coverage Results\" MODIFIED=\"1758965658988\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/brushup\" />\n    <SUITE FILE_PATH=\"coverage/ETLIFY$main.coverage\" NAME=\"main Coverage Results\" MODIFIED=\"1758527807181\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 839e983de073dea1f1735a7e9b4524586aa005a7)
+++ b/.idea/workspace.xml	(date 1759558566106)
@@ -5,8 +5,11 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="865113cd-d090-40d8-8715-6238ab101d7e" name="Changes" comment="">
-      <change afterPath="$PROJECT_DIR$/Bar Tab App/app.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Bar Tab App version 2/app.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Bar Tab App version 2/table_4_tab.csv" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Bar Tab App/app.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/Bar Tab App/table1.csv" beforeDir="false" afterPath="$PROJECT_DIR$/Bar Tab App version 2/table1.csv" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -36,6 +39,7 @@
     "ModuleVcsDetector.initialDetectionPerformed": "true",
     "Python.Defining classes.executor": "Run",
     "Python.Lists & Tuples.executor": "Run",
+    "Python.app.executor": "Run",
     "Python.class_methods.executor": "Run",
     "Python.conditional statements.executor": "Run",
     "Python.decorator_funcs.executor": "Run",
@@ -53,7 +57,7 @@
     "RunOnceActivity.ShowReadmeOnStart": "true",
     "RunOnceActivity.TerminalTabsStorage.copyFrom.TerminalArrangementManager.252": "true",
     "RunOnceActivity.git.unshallow": "true",
-    "git-widget-placeholder": "master",
+    "git-widget-placeholder": "Merging master",
     "node.js.detected.package.eslint": "true",
     "node.js.detected.package.tslint": "true",
     "node.js.selected.package.eslint": "(autodetect)",
@@ -107,7 +111,7 @@
       <option name="number" value="Default" />
       <option name="presentableId" value="Default" />
       <updated>1757592165121</updated>
-      <workItem from="1757592174891" duration="42126000" />
+      <workItem from="1757592174891" duration="43763000" />
     </task>
     <servers />
   </component>
@@ -130,11 +134,12 @@
     <SUITE FILE_PATH="coverage/ETLIFY$conditional_statements.coverage" NAME="conditional statements Coverage Results" MODIFIED="1758531941074" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
     <SUITE FILE_PATH="coverage/ETLIFY$working_with_paths.coverage" NAME="working_with paths Coverage Results" MODIFIED="1759334119915" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/brushup" />
     <SUITE FILE_PATH="coverage/ETLIFY$error_handling.coverage" NAME="error handling Coverage Results" MODIFIED="1758726958487" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/brushup" />
+    <SUITE FILE_PATH="coverage/ETLIFY$app.coverage" NAME="app Coverage Results" MODIFIED="1759557680495" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/Bar Tab App" />
     <SUITE FILE_PATH="coverage/ETLIFY$shopping_list.coverage" NAME="shopping list Coverage Results" MODIFIED="1758893965842" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/brushup" />
     <SUITE FILE_PATH="coverage/ETLIFY$class_methods.coverage" NAME="class_methods Coverage Results" MODIFIED="1759499626934" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/brushup" />
     <SUITE FILE_PATH="coverage/ETLIFY$decorator_funcs.coverage" NAME="decorator_funcs Coverage Results" MODIFIED="1759412211039" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/brushup" />
     <SUITE FILE_PATH="coverage/ETLIFY$join___slice_lists.coverage" NAME="join &amp; slice lists Coverage Results" MODIFIED="1758721563814" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/brushup" />
-    <SUITE FILE_PATH="coverage/ETLIFY$static_methods.coverage" NAME="static_methods Coverage Results" MODIFIED="1759501107581" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/brushup" />
+    <SUITE FILE_PATH="coverage/ETLIFY$static_methods.coverage" NAME="static_methods Coverage Results" MODIFIED="1759557542902" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/brushup" />
     <SUITE FILE_PATH="coverage/ETLIFY$Lists___Tuples.coverage" NAME="Lists &amp; Tuples Coverage Results" MODIFIED="1758721020963" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/brushup" />
     <SUITE FILE_PATH="coverage/ETLIFY$match_statments.coverage" NAME="match statments Coverage Results" MODIFIED="1758724477593" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/brushup" />
     <SUITE FILE_PATH="coverage/ETLIFY$Defining_classes.coverage" NAME="Defining classes Coverage Results" MODIFIED="1759499081722" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/brushup" />
Index: Bar Tab App version 2/app.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Bar Tab App version 2/app.py b/Bar Tab App version 2/app.py
new file mode 100644
--- /dev/null	(date 1759558146157)
+++ b/Bar Tab App version 2/app.py	(date 1759558146157)
@@ -0,0 +1,142 @@
+from pathlib import Path
+import csv
+<<<<<<< HEAD
+from platform import processor
+from symtable import Class
+
+#Class
+
+class BarTab():
+    def __init__(self,table_number):
+        self.table_number = table_number
+        self.drinks = []
+        self.total = 0.0
+        self.tip = 0.0
+        self.grand_total = 0.0
+
+
+# serve the customer
+    def serve_customer(self ):
+        while True:
+            drink = input("Enter your drink (or 'q' to quit): ")
+            if drink.lower() == 'q':
+                break
+            elif drink == '':
+                print("drink cannot be empty")
+                continue
+
+            try:
+                price= int(input("what is the price of the drink? "))
+            except ValueError:
+                print("please enter your drink and a valid price again: ")
+                continue
+
+            self.drinks.append((drink,price))
+
+
+
+# calculate the totals
+    def calculate_totals(self):
+        self.total = sum(price for _, price in self.drinks)
+        self.tip = self.total * 0.20
+        self.grand_total = self.total + self.tip
+
+
+# create csv file path
+    def create_csv(self):
+        if not self.drinks:
+            return
+        path = Path(__file__).parent / f"table{self.table_number}.csv"
+        with path.open("w", newline="") as file:
+            writer = csv.writer(file)
+            writer.writerow(["drink","price"])
+
+            for drink,price in self.drinks:
+                writer.writerow([drink,price])
+            writer.writerow(["Total ", f"{self.total:.2f}"])
+            writer.writerow(["Tip ", f"{self.tip:.2f}"])
+            writer.writerow(["Grand Total ", f"{self.grand_total:.2f}"])
+
+
+
+
+# main func
+def main():
+
+    table_one = BarTab(1)
+    table_one.serve_customer()
+    table_one.calculate_totals()
+    table_one.create_csv()
+    return
+
+
+# entry point of the script
+if __name__ == "__main__":
+    main()
+=======
+
+# Class to represent a bar tab for a specific table
+class Bar_Tab():
+    def __init__(self, table_number):
+        # Initialize table number and tab details
+        self.table_number = table_number
+        self.drinks = []        # List to store drinks and their prices
+        self.total = 0.0        # Total price of drinks
+        self.tip = 0.0          # Tip amount
+        self.grand_total = 0.0  # Total including tip
+
+    # Method to interactively serve drinks to the user
+    def serve_user(self):
+        while True:
+            name = input("Enter drink name (or 'done' to finish): ")
+            if name.lower() == 'done':
+                break
+
+            try:
+                price = float(input("Enter drink price: "))
+            except ValueError:
+                print("Invalid price. Please enter a number.")
+                continue 
+
+            self.drinks.append((name, price))  # Add drink to the list
+
+    # Method to calculate total, tip, and grand total
+    def calculate_totals(self):
+        self.total = sum(price for _, price in self.drinks)
+        self.tip = self.total * 0.15  # Assuming a 15% tip
+        self.grand_total = self.total + self.tip
+
+    # Method to save the tab details to a CSV file
+    def create_csv(self):
+        if not self.drinks:
+            print("No drinks to save.")
+            return
+        # Create the path for the CSV file in the same directory as this script
+        path = Path(__file__).parent / f"table_{self.table_number}_tab.csv"
+        
+
+        # Open the CSV file for writing
+        with open(path, mode='w', newline='') as file:
+            writer = csv.writer(file)
+            writer.writerow(["Drink Name", "Price"])
+            for drink in self.drinks:
+                writer.writerow(drink)
+            writer.writerow([])
+            writer.writerow(["Total", f"${self.total:.2f}"])
+            writer.writerow(["Tip (15%)", f"${self.tip:.2f}"])
+            writer.writerow(["Grand Total", f"${self.grand_total:.2f}"])
+        print(f"Tab saved to {path}")
+
+# Main function to run the bar tab app
+def main():
+    tab = Bar_Tab("4")  # Create a Bar_Tab instance for table 4
+    print(f"Table Number: {tab.table_number}")
+    tab.serve_user()          # Collect drink orders
+    tab.calculate_totals()    # Calculate totals
+    tab.create_csv()          # Save the tab to a CSV file
+    return
+
+# Entry point of the script
+if __name__ == "__main__":
+    main()
+>>>>>>> 06985b60e98781a106fd8a7e95b560ac94ed3c7e
diff --git a/Bar Tab App/table1.csv b/Bar Tab App version 2/table1.csv
rename from Bar Tab App/table1.csv
rename to Bar Tab App version 2/table1.csv
